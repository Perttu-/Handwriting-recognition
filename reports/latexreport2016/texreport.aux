\relax 
\@writefile{toc}{\contentsline {section}{Abstract}{1}}
\@writefile{toc}{\contentsline {section}{Table of Contents}{2}}
\@writefile{toc}{\contentsline {section}{List of Abbreviations and Symbols}{3}}
\@writefile{toc}{\contentsline {section}{\numberline {1}Introduction}{4}}
\citation{Cheriet2007}
\citation{Pesch2012}
\@writefile{toc}{\contentsline {section}{\numberline {2}Background}{5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}Handwriting Recognition}{5}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.1}Preprocessing}{5}}
\citation{Dalal2005}
\citation{Dalal}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Flow graph of handwriting recognition systems working displaying the current research's focus. The input is an image file with seven lines of text in it. After thresholding a binarized image is acquired and after layout analysis individual lines are detected.  }}{6}}
\newlabel{fig:flow}{{1}{6}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.2}Layout Analysis}{6}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.3}Feature Extraction}{6}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.4}Classification}{6}}
\citation{SAS}
\citation{Beyer}
\citation{Kelly}
\citation{ABBYY}
\citation{Smith2007a}
\citation{Breuel2007}
\citation{FreeSoftwareFoundation2016}
\citation{CognitiveTechnologies2016}
\citation{Smith2007a}
\citation{Angelica}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces For example horizontal and vertical projection histograms can be used as features to describe the shape of an object.}}{7}}
\newlabel{fig:feature}{{2}{7}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces Visualization on how k-nearest neighbors algorithm works. Blue squares and red triangles represent two groups of data. Green circle is the new data entry. Depending whether $k$ value is 3 or 5 the new entry is classified to the class which has the most representation within the group. }}{7}}
\newlabel{fig:knn}{{3}{7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}State of the Art}{8}}
\citation{TheMathWorksWiener}
\citation{Sauvola2000}
\@writefile{toc}{\contentsline {section}{\numberline {3}Preprocessing Methods}{9}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}Noise Removal}{9}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}Contrast Enhancement}{9}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces Histogram equalization can be applied to enhance the contrast and bring out details in an image. Left image: original image. Right image: same image with equalized histogram. Image source: http://www.mathworks.com/help/images/ref/histeq.html  }}{9}}
\newlabel{fig:histeq}{{4}{9}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3}Binarization}{9}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces Visualization of adaptive thresholding done with Sauvola algorithm. Left image: input image with shadows. Middle image: threshold of each pixel visualized. Pixel which intensity value are under given threshold are set as one, otherwise they are set as zero. Right image: binarized output image.  }}{10}}
\newlabel{fig:sauvolathresholdvis}{{5}{10}}
\citation{Li}
\citation{MathworksTextRecognition}
\@writefile{toc}{\contentsline {section}{\numberline {4}Layout Analysis Methods}{11}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1}Component Property Analysis}{11}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces Objects may have unpredictable Euler numbers due to noisy image or thin strokes. The component on left has one object and one hole manking the Euler number 0 and the object on the right has two holes making the Euler number -1. Ideally the left object would be removed. However the Euler number of these two objects is close making the threshold selection difficult.  }}{11}}
\newlabel{fig:eulernumbercomp}{{6}{11}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2}Stroke Thickness Variation Analysis}{11}}
\citation{Louloudis1}
\citation{Louloudis2}
\citation{Razak}
\citation{Louloudis1}
\citation{Louloudis2}
\@writefile{lof}{\contentsline {figure}{\numberline {7}{\ignorespaces Visualization of distance transform with two different components using same color map scale. The colors represent the distance from foreground pixel to nearest background pixel. The character A has only a small amount of variation in stroke width, mainly around junction points. The other object, not representing any textual information, has noticeable variation in stroke width.  }}{12}}
\newlabel{fig:strokewidth}{{7}{12}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.3}Bounding Box Expansion Method}{12}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.4}Run Length Smearing Algorithm}{12}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.5}Block Based Hough Transform Mapping}{12}}
\citation{Louloudis1}
\citation{Louloudis1}
\@writefile{lof}{\contentsline {figure}{\numberline {8}{\ignorespaces The process of RLSA. Upper left image is the binarized input image. Upper right image is resulting image after RLSA is applied. In lower left image the individual lines are represented by the cyan colored boxes. Lastly in lower right image the same boxes are applied to the input image to represent individual text lines. For this case the RLSA performs well except for the small object under the word ``Gaitskell''.  }}{13}}
\newlabel{fig:workingrlsa}{{8}{13}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {4.5.1}Subsets}{13}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {4.5.2}Hough Transform Mapping}{13}}
\newlabel{sec:houghtransformmapping}{{4.5.2}{13}}
\@writefile{lof}{\contentsline {figure}{\numberline {9}{\ignorespaces Component space partitioned to 3 subsets. Here AH and AW are average height and average width of components respectively \cite  {Louloudis1}. }}{14}}
\newlabel{fig:subsetspace}{{9}{14}}
\@writefile{lof}{\contentsline {figure}{\numberline {10}{\ignorespaces Components marked with bounding boxes corresponding to subset. Yellow boxes represent subset 1. The result of splitting can also be seen. Cyan boxes are subset 2 components and magenta colored boxes belong to subset 3.  }}{14}}
\newlabel{fig:subsetboxes}{{10}{14}}
\@writefile{lof}{\contentsline {figure}{\numberline {11}{\ignorespaces  Left image: Cartesian space with two data points. Red and blue lines show how $\theta $ and $\rho $ can be used to describe any line in Cartesian space. The Red line is the actual line and the perpendicular blue line is used to visualize the distance $\rho $ from origin. Right image: The green lines represent all $\theta $ and $\rho $ pairs that can produce a line which crosses either of the two data points. A line is found with the $\theta $ and $\rho $ values of the intersection point of these two sinusoidal lines. }}{14}}
\newlabel{fig:houghtransform}{{11}{14}}
\citation{Louloudis2}
\@writefile{lof}{\contentsline {figure}{\numberline {12}{\ignorespaces Left images: Input image with handwritten text and corresponding subset 1. block centroids. Right image: Hough transform accumulator array generated with given data points. Seven distinct lines can be detected from this accumulator array. Used image: handwritten part of IAM handwriting database entry a01-000u.  }}{15}}
\newlabel{fig:blockandacc}{{12}{15}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {4.5.3}Additional Constraints and Techniques}{15}}
\@writefile{lof}{\contentsline {figure}{\numberline {13}{\ignorespaces Resulting lines are labeled after line detection. Image displays final lines detected with current implementation. Some subset 2. objects intersecting multiple lines are split, however in some cases incorrectly. Used image: six handwritten lines from IAM handwriting database entry a01-011x  }}{16}}
\newlabel{fig:finallines}{{13}{16}}
\citation{IAM}
\@writefile{toc}{\contentsline {section}{\numberline {5}Evaluation}{17}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.1}Dataset}{17}}
\@writefile{lof}{\contentsline {figure}{\numberline {14}{\ignorespaces Full page entry of IAM handwriting database. The scanned page contains both machine printed original text and the handwritten version of it.  }}{17}}
\newlabel{fig:iamsamplepage}{{14}{17}}
\@writefile{lof}{\contentsline {figure}{\numberline {15}{\ignorespaces Three small extracts from hand written parts in IAM handwriting database. The same text can have distinctly different writing styles.  }}{17}}
\newlabel{fig:iamsamplelines}{{15}{17}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.2}Experiments}{18}}
\@writefile{lof}{\contentsline {figure}{\numberline {16}{\ignorespaces Flowgraph of the test process. The process consists of two nested loops which iterate through all tested parameter values and images. }}{18}}
\newlabel{fig:testprocess}{{16}{18}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.3}Contrast Enhancement}{18}}
\@writefile{lof}{\contentsline {figure}{\numberline {17}{\ignorespaces Left image: input image. Right image: same image after histogram equalization was applied to it. Histogram equalization made rest of the recognition process more difficult by increasing the noise in the image. Used image: handwritten part of IAM handwriting database entry a01-000u. }}{19}}
\newlabel{fig:histeqfail}{{17}{19}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.4}Adaptive Wiener Filtering}{19}}
\@writefile{lof}{\contentsline {figure}{\numberline {18}{\ignorespaces The adaptive Wiener filter performed poorly only with window sizes 0 and 1. }}{19}}
\newlabel{fig:wienertest}{{18}{19}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.5}Binarization}{19}}
\@writefile{lof}{\contentsline {figure}{\numberline {19}{\ignorespaces Original input image with varying lightning on the left and the results of two different binarization approaches. The middle image is as result of binarizing the original image with constant threshold for each pixel. For the rightmost image the Sauvola binarization algorithm was used with appropriate arguments resulting in noticeably better performance. }}{20}}
\newlabel{fig:binarization}{{19}{20}}
\@writefile{lof}{\contentsline {figure}{\numberline {20}{\ignorespaces Results for parameters $k_s$ and $W_s$ Especially lowest threshold $k_s$ values for Sauvola binarization algorithm resulted in bad performance. Best results were acquired with $k_s$ value 0.5. On the other hand the changes in used window size $W_s$ didn't have much effect on the output. Manual inspection of the output was required. }}{20}}
\newlabel{fig:sauvolaresults}{{20}{20}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.6}Stroke Thickness Variation Analysis}{20}}
\@writefile{lof}{\contentsline {figure}{\numberline {21}{\ignorespaces Three lines extracted from image binarized with Sauvola algorithm using different window sizes and same $k_s$. Upper image uses $W_s = 5$ the lower image uses $W_s = 40$. Used threshold value $k_s = 0.6$. Used image: three handwritten lines from IAM handwriting database entry A01-049. }}{21}}
\newlabel{fig:sauvola540}{{21}{21}}
\@writefile{lof}{\contentsline {figure}{\numberline {22}{\ignorespaces Value 0.4 was chosen for parameter $T_{swv}$. Values higher than 0.4 didn't have much effect on the output. }}{21}}
\newlabel{fig:strokewidthresults}{{22}{21}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.7}RLSA}{21}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.8}Block Based Hough Transform Mapping}{21}}
\newlabel{sec:houghtransformevaluation}{{5.8}{21}}
\citation{Louloudis2}
\citation{Louloudis2}
\@writefile{lof}{\contentsline {figure}{\numberline {23}{\ignorespaces Closer inspection of these three lines produced by RLSA shows that there are many small fractions around them. The current implementation counts all of the parts as individual lines. Used threshold value $T_{RLSA} = 300$. }}{22}}
\newlabel{fig:rlsafailzoom}{{23}{22}}
\@writefile{lof}{\contentsline {figure}{\numberline {24}{\ignorespaces Another case where RLSA can't detect lines correctly. The binarized image on the left had many characters that overlapped multiple lines. Only two ``lines'' can be found from the resulting RLSA image on the right. }}{22}}
\newlabel{fig:rlsafailoverlap}{{24}{22}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.8.1}Optimal Values for Block Based Hough Transform Mapping}{22}}
\@writefile{lof}{\contentsline {figure}{\numberline {25}{\ignorespaces Both parameters $n_1$ and $n_2$ were tested with values ranging from 1 to 20. Best value for $n_1$ can be seen to be 6 but no noticeably best value can be found for $n_2$. }}{23}}
\newlabel{fig:n1n2}{{25}{23}}
\@writefile{lof}{\contentsline {figure}{\numberline {26}{\ignorespaces $N_m$ performed best with value 6. }}{23}}
\newlabel{fig:votermargin}{{26}{23}}
\citation{Louloudis2}
\@writefile{lof}{\contentsline {figure}{\numberline {27}{\ignorespaces Parameters $n_1$ and $N_m$ (voter margin) together to see whether they are dependant on each other. This plot shows the colorcoded accuracy results darker color meaning low accuracy and light color high accuracy. The highest accuracy with both parameter values $n_1$ and $N_m$ being 6 is hilighted with square. }}{24}}
\newlabel{fig:n1vm}{{27}{24}}
\@writefile{toc}{\contentsline {section}{\numberline {6}Conclusions}{24}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.1}Final Parameter Values}{24}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.2}Findings About Hough Transform Mapping}{24}}
\citation{OpenCV}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.3}Remaining Problems}{25}}
\newlabel{sec:remainingproblems}{{6.3}{25}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.4}Future Work}{25}}
\bibstyle{ieeetr}
\bibdata{hwr_bibliography}
\bibcite{Cheriet2007}{1}
\bibcite{Pesch2012}{2}
\bibcite{Dalal2005}{3}
\bibcite{Dalal}{4}
\bibcite{SAS}{5}
\bibcite{Beyer}{6}
\bibcite{Kelly}{7}
\bibcite{ABBYY}{8}
\bibcite{Smith2007a}{9}
\bibcite{Breuel2007}{10}
\bibcite{FreeSoftwareFoundation2016}{11}
\bibcite{CognitiveTechnologies2016}{12}
\bibcite{Angelica}{13}
\bibcite{TheMathWorksWiener}{14}
\bibcite{Sauvola2000}{15}
\bibcite{Li}{16}
\bibcite{MathworksTextRecognition}{17}
\bibcite{Louloudis1}{18}
\bibcite{Louloudis2}{19}
\bibcite{Razak}{20}
\bibcite{IAM}{21}
\bibcite{OpenCV}{22}
